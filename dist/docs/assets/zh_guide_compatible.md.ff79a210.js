import{_ as n,c as s,a,g as t}from"./app.039d7064.js";const p='{"title":"兼容","description":"","frontmatter":{},"headers":[{"level":2,"title":"ES modules","slug":"es-modules"},{"level":2,"title":"浏览器","slug":"浏览器"}],"relativePath":"zh/guide/compatible.md","lastUpdated":1635474304547}',o={},c=[t('<h1 id="兼容" tabindex="-1">兼容 <a class="header-anchor" href="#兼容" aria-hidden="true">#</a></h1><p>为了处理新老客户端混用 jssdk 的问题，目前在 jssdk 内部已做了兼容,在使用新老 api 之前需要先判断是否存在</p><h2 id="es-modules" tabindex="-1">ES modules <a class="header-anchor" href="#es-modules" aria-hidden="true">#</a></h2><p>老写法</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Easi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;easi-jssdk&#39;</span><span class="token punctuation">;</span>\n<span class="token comment">// 老api</span>\n<span class="token keyword">const</span> easi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Easi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\neasi<span class="token punctuation">.</span><span class="token function">addCart</span><span class="token punctuation">(</span>\n  <span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 调用成功</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    itemId<span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span>\n    openDetails<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>新写法</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> easi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;easi-jssdk&#39;</span><span class="token punctuation">;</span>\n<span class="token comment">// 老api</span>\neasi<span class="token punctuation">.</span>addCart <span class="token operator">&amp;&amp;</span>\n  easi<span class="token punctuation">.</span><span class="token function">addCart</span><span class="token punctuation">(</span>\n    <span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 调用成功</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      itemId<span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span>\n      openDetails<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 新api</span>\neasi<span class="token punctuation">.</span>getXXX <span class="token operator">&amp;&amp;</span> easi<span class="token punctuation">.</span><span class="token function">getXXX</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  param1<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  param2<span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span>\n  param3<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  param4<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  param5<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\n  <span class="token comment">// 通用参数，回调函数</span>\n  <span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 处理成功情况</span>\n    <span class="token keyword">const</span> value1 <span class="token operator">=</span> res<span class="token punctuation">.</span>value1\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value1<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">fail</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> errMsg <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 处理失败情况</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 处理所有情况</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 处理用户取消情况</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="浏览器" tabindex="-1">浏览器 <a class="header-anchor" href="#浏览器" aria-hidden="true">#</a></h2><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://static.easiglobal.com/easi-jssdk/2.0.0/easi/index.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n      <span class="token comment">// easi</span>\n      easi<span class="token punctuation">.</span>config <span class="token operator">&amp;&amp;</span> easi<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      easi<span class="token punctuation">.</span>addCart <span class="token operator">&amp;&amp;</span>\n        easi<span class="token punctuation">.</span><span class="token function">addCart</span><span class="token punctuation">(</span>\n          <span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token comment">// 调用成功</span>\n              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            itemId<span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span>\n            openDetails<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>老版本 api<a href="https://github.com/infinitasx/easi-customer-jssdk/edit/master/README.md" target="_blank" rel="noopener noreferrer">链接</a></p>',10)];var e=n(o,[["render",function(n,t,p,o,e,u){return a(),s("div",null,c)}]]);export{p as __pageData,e as default};
